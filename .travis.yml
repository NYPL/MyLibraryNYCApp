language: minimal

services:
- docker

jobs:
  include:
    - stage: docker build
      if: branch = SEB-2614/docker_ecs or production
      before_install:
      - if [[ $TRAVIS_BRANCH == "SEB-2614/docker_ecs" ]];
        then
          export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_QA};
          export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_QA};
          export ENV="qa";
        fi
      - if [[ "$TRAVIS_BRANCH" == "production" ]];
        then
          export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_PRODUCTION};
          export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_PRODUCTION};
          export ENV="production";
        fi
      env:
      - LOCAL_TAG_NAME="${ENV}-$TRAVIS_BUILD_NUMBER"
      - ECR_URL=946183545209.dkr.ecr.us-east-1.amazonaws.com/my-library-nyc-app
      install:
        - pip install --user awscli
        - export LOCAL_TAG_NAME="${ENV}-$TRAVIS_BUILD_NUMBER" 
        - echo $LOCAL_TAG_NAME
        - echo "$LOCAL_TAG_NAME"
        - echo '$LOCAL_TAG_NAME'
        - echo "{$LOCAL_TAG_NAME}"

      script:
        - eval $(aws ecr get-login --no-include-email --region us-east-1)
        - docker build -t "$LOCAL_TAG_NAME" --build-arg AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" --build-arg AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" --build-arg RAILS_ENV="${ENV}" .
        - docker tag "$LOCAL_TAG_NAME" "$ECR_URL:$LOCAL_TAG_NAME"
        - docker push "$ECR_URL:$LOCAL_TAG_NAME"

after_success:
####
#  Is this better than the deploy: block? 
##
- |
  if [ "${TRAVIS_BRANCH}" = "SEB-2614/docker_ecs" -a "${TRAVIS_PULL_REQUEST}" == "false"]; then 
      export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_QA;
      export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_QA;
    #- aws ecs update-service --cluster $CLUSTER_NAME -cluster $CLUSTER_NAME --force-new-deployment
      echo "we did it"
  fi
- |
  if [ "${TRAVIS_BRANCH}" = "production" -a "${TRAVIS_PULL_REQUEST}" == "false"]; then 
      export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID_QA";
      export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY_QA";
    #- aws ecs update-service --cluster $CLUSTER_NAME -cluster $CLUSTER_NAME --force-new-deployment
  fi

env:
  global:
  - secure: VmSPZTuC7ZMDSloA+sxYBa5MP2rchrlSVLvMU7yuEv9HI8tw4FxzUmex1IBUG976zMdsfjerjjGiXaJURC2xQqWUqoFEG3wsvEKEKo9ydMAaWDN8fvlX3aEkKoG7YoBmUozsOEn+SbGiEFg8ApdB9OwDoZ+tVhNKs8TPD8KfJX3ho7ER2FpvfNPtb3l+ZydYWWyHx/jw0aW4DVrRxHFY6Z/ELyNjaLte6ikh9kRjwNQ/Krmss8aU+k5PrFi4U1JocQEgbKXhR+Vej2ASjpb9KIS/c/EWpvs8Z4uA3baYhrE7HsPLKtLnBelSsfqCRH7UOP+ZOWrgZOtvRQFjqCXoLzmKwBrlY9sNAYaPbTeEIUHpOUJgnHqWM2d0PuXqOV3aVxL1HiXDOqdcT7e2lgvBNgLRmdkXdTcYgZ5pTBF4W24n29sxpfzmKOalYVowiv2noqdeNAEbOWjd6Nj+UfYtwii6QRLRAGVx8qm38msoh1IsHNdjHIqYaAd4UYIU3nvN8veKUf42bUcrFafKG0TeMFs76ZUPBJQdlFgtBqDnEtRxhnhfc8NQxgbo1e+cdZapCMa579LDn+mNTuAiVLGxzUTssdCxvOQONZr/L7YKUl2RfJRbm1Hwa4aRUKHsb4tWTRbcqMXE8fnmA6nNjklHHzW5vCmJOF1enuGoLnfqQt8=
  - secure: ybrmOe2J5BJFW1BDY1OHAzAkvYfnDy3rKvg1bi/380NPlZjoyCNRct9bjeK1HtnG3p7A666EU9TG4NSxa71kzsx9g+w9WosjmgFEcUx863Ta9rcDJvdWM3GK5vFtMab+X3jo0qlzHApaK5GzNfR2+fm4IJ7YxcOlQwpPfxSx+08KAl+awzPjf5xacSI83h0BEjF4bD79YtK9mXRopoeF45Zw9t+2am5q1xXc0z1m/s4mIu0npFcgEy4o9wlQLA5/XGbBwi1EJqirlOwCVCA6zOpEv0HaLwmhZWmoHmzVnIo738c2eiIfZZMbZwX3+3NBtB1a6/VDLj+PZfI2X9wQMK6UNVN4QJDdhfKi/uGWWQ8D1jjUzRbX9vEUVxHConr5LT7+bAeJUcklUkin6nHxwpLnYh5Ezy/C3D85V/+X3lSlKPr2+4c+VjILzw0CurIW6Bl/0UN0FgvIOFG9O6Cw+Iai7+f/OmAf9xdvaF2TGTVkHGDTk3VdMeqpBDP/qso7EL2uvL9JVDIBcKKWH+vdKP6ApRkNNA86DNpDaxR171FoWjV3ugGTVYp5GH8ZhTZro96ZQbkWSrMcEfhcOLkHRnV9BIUjCYc72DRoaYItfuPhB0a5U3jthdRRJFgmhgJVoch1EYwEQkLWlTCKfNc7QW6vUE4lrTFAzEuvtc+334w=
