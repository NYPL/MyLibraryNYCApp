FROM ruby:2.7.4-alpine AS builder

ENV APP_HOME /home/app/MyLibraryNYCApp
ENV BUNDLE_APP_CONFIG="$APP_HOME/.bundle"
ARG RAILS_ENV
WORKDIR $APP_HOME

# workaround for therubyracer <> alpine 
RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
RUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r0/glibc-2.35-r0.apk
RUN apk add glibc-2.35-r0.apk

# install packages
RUN apk add --update --no-cache \
    git \
    libxml2-dev \
    libxslt-dev \
    postgresql-dev\
    nodejs \
    tzdata \
    yarn \
    curl \
    tzdata \
    build-base

# bundle 
COPY . $APP_HOME
COPY Gemfile $APP_HOME
COPY Gemfile.lock $APP_HOME
RUN gem install bundler

RUN bundle config --global github.https true \
    && bundle install --jobs 30 --path=vendor/bundle
    #&& rm -rf vendor/bundle/ruby/2.7.4/cache/*.gem \
    #&& find vendor/bundle/ruby/2.7.4/gems/ -name "*.c" -delete \
    #&& find vendor/bundle/ruby/2.7.4/gems/ -name "*.o" -delete

RUN bundle exec rails webpacker:install
RUN bundle exec rails webpacker:compile

# Remove unneeded in resulting image
RUN rm -rf node_modules tmp/cache test

# Copy app files into a fresh new image 
FROM ruby:2.7.4-alpine

ENV APP_HOME /home/app/MyLibraryNYCApp
ENV BUNDLE_APP_CONFIG="$APP_HOME/.bundle"
ARG RAILS_ENV

WORKDIR $APP_HOME

# install packages

COPY --from=builder $APP_HOME $APP_HOME

EXPOSE 3000
CMD ["bundle", "exec", "rails", "server", "-p", "3000", "-b", "0.0.0.0"]
